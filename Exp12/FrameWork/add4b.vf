////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : add4b.vf
// /___/   /\     Timestamp : 12/19/2016 20:11:17
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog "E:/FILES IMPORTANT/ISE14.7Files/FrameworkFORShifts/FrameWork/add4b.vf" -w "E:/FILES IMPORTANT/ISE14.7Files/FrameworkFORShifts/FrameWork/add4b.sch"
//Design Name: add4b
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module CLA_MUSER_add4b(Ci, 
                       G0, 
                       G1, 
                       G2, 
                       G3, 
                       P0, 
                       P1, 
                       P2, 
                       P3, 
                       C1, 
                       C2, 
                       C3, 
                       GG, 
                       GP);

    input Ci;
    input G0;
    input G1;
    input G2;
    input G3;
    input P0;
    input P1;
    input P2;
    input P3;
   output C1;
   output C2;
   output C3;
   output GG;
   output GP;
   
   wire XLXN_12;
   wire XLXN_17;
   wire XLXN_19;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_41;
   wire XLXN_52;
   wire XLXN_54;
   wire XLXN_55;
   
   OR2  XLXI_1 (.I0(G0), 
               .I1(XLXN_12), 
               .O(C1));
   OR3  XLXI_2 (.I0(G1), 
               .I1(XLXN_17), 
               .I2(XLXN_19), 
               .O(C2));
   OR4  XLXI_3 (.I0(G2), 
               .I1(XLXN_29), 
               .I2(XLXN_30), 
               .I3(XLXN_41), 
               .O(C3));
   OR4  XLXI_4 (.I0(G3), 
               .I1(XLXN_52), 
               .I2(XLXN_54), 
               .I3(XLXN_55), 
               .O(GG));
   AND2  XLXI_5 (.I0(P0), 
                .I1(Ci), 
                .O(XLXN_12));
   AND2  XLXI_6 (.I0(P1), 
                .I1(G0), 
                .O(XLXN_17));
   AND3  XLXI_7 (.I0(P1), 
                .I1(P0), 
                .I2(Ci), 
                .O(XLXN_19));
   AND2  XLXI_9 (.I0(P2), 
                .I1(G1), 
                .O(XLXN_29));
   AND3  XLXI_10 (.I0(P2), 
                 .I1(P1), 
                 .I2(G0), 
                 .O(XLXN_30));
   AND4  XLXI_11 (.I0(P2), 
                 .I1(P1), 
                 .I2(P0), 
                 .I3(Ci), 
                 .O(XLXN_41));
   AND4  XLXI_13 (.I0(P3), 
                 .I1(P2), 
                 .I2(P1), 
                 .I3(P0), 
                 .O(GP));
   AND2  XLXI_14 (.I0(P3), 
                 .I1(G2), 
                 .O(XLXN_52));
   AND3  XLXI_15 (.I0(P3), 
                 .I1(P2), 
                 .I2(G1), 
                 .O(XLXN_54));
   AND4  XLXI_16 (.I0(P3), 
                 .I1(P2), 
                 .I2(P1), 
                 .I3(G0), 
                 .O(XLXN_55));
endmodule
`timescale 1ns / 1ps

module add_sch_MUSER_add4b(ai, 
                           bi, 
                           ci, 
                           co, 
                           Gi, 
                           Pi, 
                           si);

    input ai;
    input bi;
    input ci;
   output co;
   output Gi;
   output Pi;
   output si;
   
   wire XLXN_15;
   wire Pi_DUMMY;
   wire Gi_DUMMY;
   
   assign Gi = Gi_DUMMY;
   assign Pi = Pi_DUMMY;
   XOR2  XLXI_1 (.I0(bi), 
                .I1(ai), 
                .O(Pi_DUMMY));
   XOR2  XLXI_2 (.I0(ci), 
                .I1(Pi_DUMMY), 
                .O(si));
   AND2  XLXI_3 (.I0(bi), 
                .I1(ai), 
                .O(Gi_DUMMY));
   AND2  XLXI_4 (.I0(ci), 
                .I1(Pi_DUMMY), 
                .O(XLXN_15));
   OR2  XLXI_5 (.I0(Gi_DUMMY), 
               .I1(XLXN_15), 
               .O(co));
endmodule
`timescale 1ns / 1ps

module add4b(ai, 
             bi, 
             C0, 
             GG, 
             GP, 
             s);

    input [3:0] ai;
    input [3:0] bi;
    input C0;
   output GG;
   output GP;
   output [3:0] s;
   
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   
   add_sch_MUSER_add4b  XLXI_1 (.ai(ai[2]), 
                               .bi(bi[2]), 
                               .ci(XLXN_34), 
                               .co(), 
                               .Gi(XLXN_30), 
                               .Pi(XLXN_29), 
                               .si(s[2]));
   add_sch_MUSER_add4b  XLXI_2 (.ai(ai[1]), 
                               .bi(bi[1]), 
                               .ci(XLXN_33), 
                               .co(), 
                               .Gi(XLXN_27), 
                               .Pi(XLXN_28), 
                               .si(s[1]));
   add_sch_MUSER_add4b  XLXI_3 (.ai(ai[0]), 
                               .bi(bi[0]), 
                               .ci(C0), 
                               .co(), 
                               .Gi(XLXN_26), 
                               .Pi(XLXN_25), 
                               .si(s[0]));
   add_sch_MUSER_add4b  XLXI_4 (.ai(ai[3]), 
                               .bi(bi[3]), 
                               .ci(XLXN_35), 
                               .co(), 
                               .Gi(XLXN_31), 
                               .Pi(XLXN_32), 
                               .si(s[3]));
   CLA_MUSER_add4b  XLXI_5 (.Ci(C0), 
                           .G0(XLXN_26), 
                           .G1(XLXN_27), 
                           .G2(XLXN_30), 
                           .G3(XLXN_31), 
                           .P0(XLXN_25), 
                           .P1(XLXN_28), 
                           .P2(XLXN_29), 
                           .P3(XLXN_32), 
                           .C1(XLXN_33), 
                           .C2(XLXN_34), 
                           .C3(XLXN_35), 
                           .GG(GG), 
                           .GP(GP));
endmodule
