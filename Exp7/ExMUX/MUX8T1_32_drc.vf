////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MUX8T1_32_drc.vf
// /___/   /\     Timestamp : 11/14/2016 21:02:20
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt\unwrapped\sch2hdl.exe -intstyle ise -family kintex7 -verilog MUX8T1_32_drc.vf -w "C:/Documents and Settings/Administrator/My Documents/3150102418/Exp7/ExMUX/MUX8T1_32.sch"
//Design Name: MUX8T1_32
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Mux4T1_4_MUSER_MUX8T1_32(I0, 
                                I1, 
                                I2, 
                                I3, 
                                s, 
                                o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire D0;
   wire D1;
   wire D2;
   wire D3;
   wire XLXN_40;
   wire XLXN_108;
   wire XLXN_149;
   wire XLXN_150;
   wire XLXN_151;
   wire XLXN_152;
   wire XLXN_390;
   wire XLXN_391;
   wire XLXN_394;
   wire XLXN_396;
   wire XLXN_440;
   wire XLXN_441;
   wire XLXN_444;
   wire XLXN_446;
   wire XLXN_450;
   wire XLXN_451;
   wire XLXN_454;
   wire XLXN_456;
   
   AND2  XLXI_1 (.I0(s[0]), 
                .I1(XLXN_40), 
                .O(D1));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_108));
   AND2  XLXI_3 (.I0(I1[0]), 
                .I1(D1), 
                .O(XLXN_150));
   AND2  XLXI_4 (.I0(XLXN_108), 
                .I1(XLXN_40), 
                .O(D0));
   INV  XLXI_5 (.I(s[1]), 
               .O(XLXN_40));
   AND2  XLXI_7 (.I0(s[1]), 
                .I1(XLXN_108), 
                .O(D2));
   AND2  XLXI_8 (.I0(s[1]), 
                .I1(s[0]), 
                .O(D3));
   AND2  XLXI_9 (.I0(I0[0]), 
                .I1(D0), 
                .O(XLXN_149));
   AND2  XLXI_32 (.I0(I2[0]), 
                 .I1(D2), 
                 .O(XLXN_151));
   AND2  XLXI_33 (.I0(I3[0]), 
                 .I1(D3), 
                 .O(XLXN_152));
   OR4  XLXI_34 (.I0(XLXN_152), 
                .I1(XLXN_151), 
                .I2(XLXN_150), 
                .I3(XLXN_149), 
                .O(o[0]));
   AND2  XLXI_126 (.I0(I0[1]), 
                  .I1(D0), 
                  .O(XLXN_390));
   AND2  XLXI_127 (.I0(I1[1]), 
                  .I1(D1), 
                  .O(XLXN_394));
   AND2  XLXI_128 (.I0(I2[1]), 
                  .I1(D2), 
                  .O(XLXN_396));
   AND2  XLXI_129 (.I0(I3[1]), 
                  .I1(D3), 
                  .O(XLXN_391));
   OR4  XLXI_130 (.I0(XLXN_391), 
                 .I1(XLXN_396), 
                 .I2(XLXN_394), 
                 .I3(XLXN_390), 
                 .O(o[1]));
   AND2  XLXI_151 (.I0(I0[2]), 
                  .I1(D0), 
                  .O(XLXN_440));
   AND2  XLXI_152 (.I0(I1[2]), 
                  .I1(D1), 
                  .O(XLXN_444));
   AND2  XLXI_153 (.I0(I2[2]), 
                  .I1(D2), 
                  .O(XLXN_446));
   AND2  XLXI_154 (.I0(I3[2]), 
                  .I1(D3), 
                  .O(XLXN_441));
   OR4  XLXI_155 (.I0(XLXN_441), 
                 .I1(XLXN_446), 
                 .I2(XLXN_444), 
                 .I3(XLXN_440), 
                 .O(o[2]));
   AND2  XLXI_156 (.I0(I0[3]), 
                  .I1(D0), 
                  .O(XLXN_450));
   AND2  XLXI_157 (.I0(I1[3]), 
                  .I1(D1), 
                  .O(XLXN_454));
   AND2  XLXI_158 (.I0(I2[3]), 
                  .I1(D2), 
                  .O(XLXN_456));
   AND2  XLXI_159 (.I0(I3[3]), 
                  .I1(D3), 
                  .O(XLXN_451));
   OR4  XLXI_160 (.I0(XLXN_451), 
                 .I1(XLXN_456), 
                 .I2(XLXN_454), 
                 .I3(XLXN_450), 
                 .O(o[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_MUX8T1_32(I0, 
                                I1, 
                                I2, 
                                I3, 
                                I4, 
                                I5, 
                                I6, 
                                I7, 
                                s, 
                                o);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] o;
   
   wire [3:0] o0;
   wire [3:0] o1;
   wire [3:0] o2;
   wire [3:0] o3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_32;
   
   Mux4T1_4_MUSER_MUX8T1_32  XLXI_1 (.I0(I1[3:0]), 
                                    .I1(I0[3:0]), 
                                    .I2(I2[3:0]), 
                                    .I3(I3[3:0]), 
                                    .s(s[1:0]), 
                                    .o(o0[3:0]));
   Mux4T1_4_MUSER_MUX8T1_32  XLXI_2 (.I0(I5[3:0]), 
                                    .I1(I4[3:0]), 
                                    .I2(I6[3:0]), 
                                    .I3(I7[3:0]), 
                                    .s(s[1:0]), 
                                    .o(o1[3:0]));
   Mux4T1_4_MUSER_MUX8T1_32  XLXI_3 (.I0(I1[7:4]), 
                                    .I1(I0[7:4]), 
                                    .I2(I2[7:4]), 
                                    .I3(I3[7:4]), 
                                    .s(s[1:0]), 
                                    .o(o2[3:0]));
   Mux4T1_4_MUSER_MUX8T1_32  XLXI_4 (.I0(I5[7:4]), 
                                    .I1(I4[7:4]), 
                                    .I2(I6[7:4]), 
                                    .I3(I7[7:4]), 
                                    .s(s[1:0]), 
                                    .o(o3[3:0]));
   AND2  XLXI_5 (.I0(o0[0]), 
                .I1(XLXN_32), 
                .O(XLXN_4));
   AND2  XLXI_10 (.I0(o1[0]), 
                 .I1(s[2]), 
                 .O(XLXN_5));
   AND2  XLXI_11 (.I0(o0[1]), 
                 .I1(XLXN_32), 
                 .O(XLXN_6));
   AND2  XLXI_12 (.I0(o1[1]), 
                 .I1(s[2]), 
                 .O(XLXN_7));
   AND2  XLXI_13 (.I0(o0[2]), 
                 .I1(XLXN_32), 
                 .O(XLXN_8));
   AND2  XLXI_14 (.I0(o1[2]), 
                 .I1(s[2]), 
                 .O(XLXN_9));
   AND2  XLXI_15 (.I0(o0[3]), 
                 .I1(XLXN_32), 
                 .O(XLXN_10));
   AND2  XLXI_16 (.I0(o1[3]), 
                 .I1(s[2]), 
                 .O(XLXN_12));
   AND2  XLXI_17 (.I0(o2[0]), 
                 .I1(XLXN_32), 
                 .O(XLXN_13));
   AND2  XLXI_18 (.I0(o3[0]), 
                 .I1(s[2]), 
                 .O(XLXN_14));
   AND2  XLXI_19 (.I0(o2[1]), 
                 .I1(XLXN_32), 
                 .O(XLXN_15));
   AND2  XLXI_20 (.I0(o3[1]), 
                 .I1(s[2]), 
                 .O(XLXN_16));
   AND2  XLXI_21 (.I0(o2[2]), 
                 .I1(XLXN_32), 
                 .O(XLXN_17));
   AND2  XLXI_22 (.I0(o3[2]), 
                 .I1(s[2]), 
                 .O(XLXN_18));
   AND2  XLXI_23 (.I0(o2[3]), 
                 .I1(XLXN_32), 
                 .O(XLXN_20));
   AND2  XLXI_24 (.I0(o3[3]), 
                 .I1(s[2]), 
                 .O(XLXN_19));
   OR2  XLXI_25 (.I0(XLXN_5), 
                .I1(XLXN_4), 
                .O(o[0]));
   OR2  XLXI_26 (.I0(XLXN_7), 
                .I1(XLXN_6), 
                .O(o[1]));
   OR2  XLXI_27 (.I0(XLXN_9), 
                .I1(XLXN_8), 
                .O(o[2]));
   OR2  XLXI_28 (.I0(XLXN_12), 
                .I1(XLXN_10), 
                .O(o[3]));
   OR2  XLXI_29 (.I0(XLXN_14), 
                .I1(XLXN_13), 
                .O(o[4]));
   OR2  XLXI_30 (.I0(XLXN_16), 
                .I1(XLXN_15), 
                .O(o[5]));
   OR2  XLXI_31 (.I0(XLXN_18), 
                .I1(XLXN_17), 
                .O(o[6]));
   OR2  XLXI_33 (.I0(XLXN_19), 
                .I1(XLXN_20), 
                .O(o[7]));
   INV  XLXI_42 (.I(s[2]), 
                .O(XLXN_32));
endmodule
`timescale 1ns / 1ps

module MUX8T1_32(I0, 
                 I1, 
                 I2, 
                 I3, 
                 I4, 
                 I5, 
                 I6, 
                 I7, 
                 s, 
                 o);

    input [31:0] I0;
    input [31:0] I1;
    input [31:0] I2;
    input [31:0] I3;
    input [31:0] I4;
    input [31:0] I5;
    input [31:0] I6;
    input [31:0] I7;
    input [2:0] s;
   output [31:0] o;
   
   
   MUX8T1_8_MUSER_MUX8T1_32  XLXI_1 (.I0(I0[7:0]), 
                                    .I1(I1[7:0]), 
                                    .I2(I2[7:0]), 
                                    .I3(I3[7:0]), 
                                    .I4(I4[7:0]), 
                                    .I5(I5[7:0]), 
                                    .I6(I6[7:0]), 
                                    .I7(I7[7:0]), 
                                    .s(s[2:0]), 
                                    .o(o[7:0]));
   MUX8T1_8_MUSER_MUX8T1_32  XLXI_2 (.I0(I0[15:8]), 
                                    .I1(I1[15:8]), 
                                    .I2(I2[15:8]), 
                                    .I3(I3[15:8]), 
                                    .I4(I4[15:8]), 
                                    .I5(I5[15:8]), 
                                    .I6(I6[15:8]), 
                                    .I7(I7[15:8]), 
                                    .s(s[2:0]), 
                                    .o(o[15:8]));
   MUX8T1_8_MUSER_MUX8T1_32  XLXI_3 (.I0(I0[23:16]), 
                                    .I1(I1[23:16]), 
                                    .I2(I2[23:16]), 
                                    .I3(I3[23:16]), 
                                    .I4(I4[23:16]), 
                                    .I5(I5[23:16]), 
                                    .I6(I6[23:16]), 
                                    .I7(I7[23:16]), 
                                    .s(s[2:0]), 
                                    .o(o[23:16]));
   MUX8T1_8_MUSER_MUX8T1_32  XLXI_4 (.I0(I0[31:24]), 
                                    .I1(I1[31:24]), 
                                    .I2(I2[31:24]), 
                                    .I3(I3[31:24]), 
                                    .I4(I4[31:24]), 
                                    .I5(I5[31:24]), 
                                    .I6(I6[31:24]), 
                                    .I7(I7[31:24]), 
                                    .s(s[2:0]), 
                                    .o(o[31:24]));
endmodule
