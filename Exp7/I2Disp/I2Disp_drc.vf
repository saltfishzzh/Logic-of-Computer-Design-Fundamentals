////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : I2Disp_drc.vf
// /___/   /\     Timestamp : 11/15/2016 22:28:25
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt\unwrapped\sch2hdl.exe -intstyle ise -family kintex7 -verilog I2Disp_drc.vf -w "C:/Documents and Settings/Administrator/My Documents/3150102418/Exp7/I2Disp/I2Disp.sch"
//Design Name: I2Disp
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MC14495_MUSER_I2Disp(D0, 
                            D1, 
                            D2, 
                            D3, 
                            LE, 
                            Point, 
                            a, 
                            b, 
                            c, 
                            d, 
                            e, 
                            f, 
                            g, 
                            p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input Point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire AA;
   wire A0;
   wire A1;
   wire A2;
   wire A3;
   wire A4;
   wire A5;
   wire A6;
   wire A7;
   wire A8;
   wire A9;
   wire A10;
   wire A11;
   wire A12;
   wire A13;
   wire A14;
   wire A15;
   wire A16;
   wire A17;
   wire A18;
   wire A19;
   wire A20;
   wire BB;
   wire CC;
   wire DD;
   wire EE;
   wire FF;
   wire GG;
   wire ND0;
   wire ND1;
   wire ND2;
   wire ND3;
   
   AND4  AD0 (.I0(ND0), 
             .I1(ND1), 
             .I2(D2), 
             .I3(D3), 
             .O(A0));
   AND4  AD1 (.I0(D0), 
             .I1(D1), 
             .I2(D2), 
             .I3(ND3), 
             .O(A1));
   AND3  AD2 (.I0(ND1), 
             .I1(ND2), 
             .I2(ND3), 
             .O(A2));
   AND3  AD3 (.I0(D0), 
             .I1(D1), 
             .I2(ND3), 
             .O(A3));
   AND3  AD04 (.I0(D1), 
              .I1(ND2), 
              .I2(ND3), 
              .O(A4));
   AND3  AD05 (.I0(D0), 
              .I1(ND2), 
              .I2(ND3), 
              .O(A5));
   AND3  AD06 (.I0(D0), 
              .I1(ND1), 
              .I2(ND2), 
              .O(A6));
   AND3  AD07 (.I0(ND1), 
              .I1(D2), 
              .I2(ND3), 
              .O(A7));
   AND2  AD08 (.I0(D0), 
              .I1(ND3), 
              .O(A8));
   AND4  AD09 (.I0(ND0), 
              .I1(D1), 
              .I2(D3), 
              .I3(ND2), 
              .O(A9));
   AND3  AD10 (.I0(D0), 
              .I1(D1), 
              .I2(D2), 
              .O(A10));
   AND3  AD11 (.I0(D1), 
              .I1(D2), 
              .I2(D3), 
              .O(A11));
   AND4  AD12 (.I0(ND0), 
              .I1(D1), 
              .I2(ND2), 
              .I3(ND3), 
              .O(A12));
   AND3  AD13 (.I0(D0), 
              .I1(D1), 
              .I2(D3), 
              .O(A13));
   AND3  AD14 (.I0(ND0), 
              .I1(D2), 
              .I2(D3), 
              .O(A14));
   AND3  AD15 (.I0(ND0), 
              .I1(D1), 
              .I2(D2), 
              .O(A15));
   AND4  AD16 (.I0(D0), 
              .I1(ND1), 
              .I2(D2), 
              .I3(ND3), 
              .O(A16));
   AND4  AD17 (.I0(D0), 
              .I1(D1), 
              .I2(ND2), 
              .I3(D3), 
              .O(A17));
   AND4  AD18 (.I0(D0), 
              .I1(ND1), 
              .I2(D2), 
              .I3(D3), 
              .O(A18));
   AND4  AD19 (.I0(ND0), 
              .I1(ND1), 
              .I2(D2), 
              .I3(ND3), 
              .O(A19));
   AND4  AD20 (.I0(ND1), 
              .I1(ND2), 
              .I2(D0), 
              .I3(ND3), 
              .O(A20));
   OR4  a_1 (.I0(A17), 
            .I1(A18), 
            .I2(A19), 
            .I3(A20), 
            .O(AA));
   OR4  b_1 (.I0(A13), 
            .I1(A14), 
            .I2(A15), 
            .I3(A16), 
            .O(BB));
   OR3  c_1 (.I0(A11), 
            .I1(A12), 
            .I2(A14), 
            .O(CC));
   OR4  d_1 (.I0(A9), 
            .I1(A10), 
            .I2(A19), 
            .I3(A20), 
            .O(DD));
   OR3  e_1 (.I0(A6), 
            .I1(A7), 
            .I2(A8), 
            .O(EE));
   OR4  f_1 (.I0(A3), 
            .I1(A4), 
            .I2(A5), 
            .I3(A18), 
            .O(FF));
   OR3  g_1 (.I0(A0), 
            .I1(A1), 
            .I2(A2), 
            .O(GG));
   INV  INV_1 (.I(D3), 
              .O(ND3));
   INV  INV_2 (.I(D2), 
              .O(ND2));
   INV  INV_3 (.I(D1), 
              .O(ND1));
   INV  INV_4 (.I(D0), 
              .O(ND0));
   OR2  XLXI_68 (.I0(LE), 
                .I1(AA), 
                .O(a));
   OR2  XLXI_69 (.I0(LE), 
                .I1(BB), 
                .O(b));
   OR2  XLXI_70 (.I0(LE), 
                .I1(CC), 
                .O(c));
   OR2  XLXI_71 (.I0(LE), 
                .I1(DD), 
                .O(d));
   OR2  XLXI_72 (.I0(LE), 
                .I1(EE), 
                .O(e));
   OR2  XLXI_73 (.I0(LE), 
                .I1(FF), 
                .O(f));
   OR2  XLXI_74 (.I0(LE), 
                .I1(GG), 
                .O(g));
   INV  XLXI_89 (.I(Point), 
                .O(p));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev16_MUSER_I2Disp(flash_clk, 
                               Hexs, 
                               LES, 
                               point, 
                               Scan, 
                               AN, 
                               SEGMENT);

    input flash_clk;
    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [3:0] Hex;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_11;
   
   dispsync  XLXI_1 (.Hexs(Hexs[15:0]), 
                    .LES(LES[3:0]), 
                    .point(point[3:0]), 
                    .Scan(Scan[1:0]), 
                    .AN(AN[3:0]), 
                    .Hex(Hex[3:0]), 
                    .LE(XLXN_8), 
                    .p(XLXN_6));
   MC14495_MUSER_I2Disp  XLXI_2 (.D0(Hex[0]), 
                                .D1(Hex[1]), 
                                .D2(Hex[2]), 
                                .D3(Hex[3]), 
                                .LE(XLXN_11), 
                                .Point(XLXN_6), 
                                .a(SEGMENT[0]), 
                                .b(SEGMENT[1]), 
                                .c(SEGMENT[2]), 
                                .d(SEGMENT[3]), 
                                .e(SEGMENT[4]), 
                                .f(SEGMENT[5]), 
                                .g(SEGMENT[6]), 
                                .p(SEGMENT[7]));
   AND2  XLXI_3 (.I0(XLXN_8), 
                .I1(flash_clk), 
                .O(XLXN_11));
endmodule
`timescale 1ns / 1ps

module I2Disp(clk_100mhz, 
              K_COL, 
              RSTN, 
              SW, 
              AN, 
              Buzzer, 
              K_ROW, 
              LED, 
              SEGMENT);

    input clk_100mhz;
    input [3:0] K_COL;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output Buzzer;
   output [4:0] K_ROW;
   output [2:0] LED;
   output [7:0] SEGMENT;
   
   wire [31:0] Ai;
   wire [7:0] blink;
   wire [3:0] button_out;
   wire [31:0] Div;
   wire G0;
   wire [15:0] SW_OK;
   wire XLXN_6;
   wire XLXN_23;
   
   Anti_jitter  XLXI_1 (.clk(clk_100mhz), 
                       .K_COL(K_COL[3:0]), 
                       .RSTN(RSTN), 
                       .SW(SW[15:0]), 
                       .button_out(button_out[3:0]), 
                       .button_pulse(), 
                       .CR(), 
                       .K_ROW(K_ROW[4:0]), 
                       .rst(XLXN_6), 
                       .SW_OK(SW_OK[15:0]));
   clkdiv  XLXI_2 (.clk(clk_100mhz), 
                  .rst(XLXN_6), 
                  .clkdiv(Div[31:0]));
   InputT32  XLXI_5 (.clk(Div[0]), 
                    .Dctr({SW[7:5], SW[1:0]}), 
                    .Ai(Ai[31:0]), 
                    .Bi(), 
                    .blink(blink[7:0]), 
                    .state(LED[2:0]), 
                    .BTN(button_out[3:0]));
   Seg7_Dev16_MUSER_I2Disp  XLXI_6 (.flash_clk(Div[25]), 
                                   .Hexs(Ai[15:0]), 
                                   .LES(blink[3:0]), 
                                   .point(SW_OK[3:0]), 
                                   .Scan(Div[1:0]), 
                                   .AN(AN[3:0]), 
                                   .SEGMENT(SEGMENT[7:0]));
   BUF  XLXI_7 (.I(XLXN_23), 
               .O(Buzzer));
   VCC  XLXI_8 (.P(XLXN_23));
   GND  XLXI_9 (.G(G0));
endmodule
